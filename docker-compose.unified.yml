# VoiceStand Learning System - Secured Docker Configuration
# Security Features:
# - Port binding restricted to localhost (127.0.0.1) only
# - Isolated internal network with custom subnet
# - Dropped ALL Linux capabilities, added only necessary ones
# - Read-only containers with limited tmpfs
# - No new privileges allowed
# - User context isolation (UID/GID 1000)
# - Limited connection counts and CORS disabled

services:
  # PostgreSQL with pgvector - internal only
  voicestand-learning-db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: voicestand_learning
      POSTGRES_USER: voicestand
      POSTGRES_PASSWORD: learning_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - learning_data:/var/lib/postgresql/data
      - ./learning/sql:/docker-entrypoint-initdb.d
    networks:
      - voicestand-internal
    command: postgres -c shared_preload_libraries=vector
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
      - DAC_OVERRIDE
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voicestand -d voicestand_learning"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Unified VoiceStand Learning Gateway - Single Port Entry Point
  voicestand-gateway:
    build:
      context: ./learning
      dockerfile: Dockerfile.gateway
    depends_on:
      voicestand-learning-db:
        condition: service_healthy
    ports:
      - "127.0.0.1:7890:7890"  # Bind only to localhost for security
    environment:
      # Database connection
      LEARNING_DB_URL: postgresql://voicestand:learning_pass@voicestand-learning-db:5432/voicestand_learning

      # Learning configuration
      ACCURACY_TARGET: 0.95
      LEARNING_RATE: 0.001
      UK_ENGLISH_SPECIALIZATION: true
      ENSEMBLE_SIZE: 5

      # Gateway configuration
      GATEWAY_PORT: 7890
      ENABLE_DASHBOARD: true
      ENABLE_API: true
      ENABLE_MONITORING: true

      # Intel optimizations
      INTEL_OPTIMIZATIONS: true
      NPU_ACCELERATION: auto

      # Security configuration
      BIND_ADDRESS: 127.0.0.1
      ALLOWED_HOSTS: localhost,127.0.0.1
      ENABLE_CORS: false
      MAX_CONNECTIONS: 10

    volumes:
      - ./models:/app/models
      - ./learning_data:/app/data
      - ./fine_tuned_models:/app/fine_tuned
    networks:
      - voicestand-internal
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/logs:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7890/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Background Learning Worker - Internal only
  learning-worker:
    build:
      context: ./learning
      dockerfile: Dockerfile.worker
    depends_on:
      voicestand-gateway:
        condition: service_healthy
    environment:
      GATEWAY_URL: http://voicestand-gateway:7890
      WORKER_TYPE: continuous_learning
      PROCESSING_INTERVAL: 10
      UK_PATTERN_DETECTION: true
    volumes:
      - ./models:/app/models
      - ./learning_data:/app/data
    networks:
      - voicestand-internal
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    restart: unless-stopped

  # Model Optimizer - Internal only
  model-optimizer:
    build:
      context: ./learning
      dockerfile: Dockerfile.optimizer
    depends_on:
      voicestand-gateway:
        condition: service_healthy
    environment:
      GATEWAY_URL: http://voicestand-gateway:7890
      OPTIMIZATION_INTERVAL: 300  # 5 minutes
      ENSEMBLE_OPTIMIZATION: true
      UK_MODEL_PRIORITIZATION: true
    volumes:
      - ./models:/app/models
    networks:
      - voicestand-internal
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
      - /app/logs:noexec,nosuid,size=50m
    restart: unless-stopped

volumes:
  learning_data:

networks:
  voicestand-internal:
    driver: bridge
    internal: false  # Allow host access but restrict external network access
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
      com.docker.network.driver.mtu: "1500"
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1